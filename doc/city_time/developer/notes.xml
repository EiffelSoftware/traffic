<?xml version="1.0"?>
<chapter xmlns="http://www.gobosoft.com/eiffel/gobo/documentation" id="city3d/developer/notes">
<chapterinfo>
	<copyright>
		<year>2005</year>
		<holder>Michela Pedroni</holder>
	</copyright>
    <email>michela.pedroni@inf.ethz.ch</email>
	<date>$Date$</date>
</chapterinfo>

<title>Notes</title>
<section id="dependencies">
	<title>External dependencies</title>
    <para>
        This section lists some things that are kind of ugly in the sense that the application may not work perfectly if some external parameters are changed.
    </para>
    <para>
    In <classname cluster="city_3d">SHARED_CONSTANTS</classname>:
        <itemizedlist>
            <listitem><para>
                <featurename class="tr_traffic.tr_visualization.tr_3d_visualization.traffic_3d_constants">Plane_size</featurename> is a constant that is chosen with the example maps in mind. This works for them 
						but it might not work perfectly for other map files.
            </para></listitem>
            <listitem><para>
                <featurename class="tr_traffic.tr_visualization.tr_3d_visualization.traffic_3d_constants">map_to_gl_coords</featurename> is also optimized for our example maps. It uses the range of the coordinates from 
		the map xml file and centers the Zurich main station on the screen. This might not be intended for other examples.
            </para></listitem>
        </itemizedlist>
        These issues could be solved by either extending the map file or using a separate xml file.
    </para>
</section>

<section id="reuseability">
	<title>Reutilisation and extensions</title>
	<para>
		This section discusses some scenarios of how one could reuse this work.
	</para>
    <para>
	1) Replacing the GUI:
    </para>
	<para>
		As this is the intention of the class <classname cluster="tr_traffic.tr_visualization.tr_3d_visualization">TRAFFIC_3D_MAP_WIDGET</classname> if someone wants to make a new application with a map then it should be inherited from the mentioned class which implements the basics.
		Therefore reusing is straightforward.
	</para>
	<para>
	2) Extending displayed objects:
     </para>
	 <para>
	 For all objects there are factories provided. If someone needs a object which differs from the default ones he could implement a function in the *_REPRESENTATION classes and give it to the corresponding factory. Only the class <classname cluster="tr_traffic.tr_visualization.tr_3d_visualization">TRAFFIC_TRAVELER_REPRESENTATION</classname> doesn't support this way, because
	 it's factory is different to the other ones. The corresponding factory <classname cluster="tr_traffic.tr_visualization.tr_3d_visualization">TRAFFIC_OBJECT_LOADER</classname> inherits from the EM_OBJ_LOADER class which seems not fully developed. There are problems if a file is loaded more than once
	 and therefore the factory has always be created if one wants to create an object. A new object has to be modeled in a *.obj file and simply loaded. 
	</para>
	<para>
	3) Extending functionality:
    </para>
	<para>
    	As just mentioned the class  <classname cluster="tr_traffic.tr_visualization.tr_3d_visualization">TRAFFIC_OBJECT_LOADER</classname> should be corrected to only make one instance of it, but this is maybe task of a EM library designer. If this class is reviewed maybe more than only triangular objects could be implemented and different colors could be modelled.
    </para>
<toplink/>
</section>

<section id="future_perspective">
	<para/>
	<title>Ideas</title>
	<para>
        <itemizedlist>
            <listitem><para>
                Promenade through the city: would make it possible to walk through the city with some traveler, which now exists, and to explore the city 'per pedes'.
            </para></listitem>
			<listitem><para>
				Schedules for the <classname cluster="tr_traffic">TRAFFIC_LINE_TRAVELER</classname> objects are desirable. Also delays of trams would give more realism to the simulation. Collision between two traveler objects can be detected and some action taken. 			
            </para></listitem>
			<listitem><para>
				In the xml there could be some hubs modelled from where all line_travelers start. There could be some automated start and creation of line traveler over the daytime. The same is true for other travelers as for example rush hour could be modeled.
            </para></listitem>
			<listitem><para>
				Aside of tram and train lines there streets would make sense, and a new traveler type which travels along a random way, but always on the street.
            </para></listitem>
        </itemizedlist>
    </para>
</section>

</chapter>

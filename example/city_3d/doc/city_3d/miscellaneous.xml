<?xml version="1.0"?>

<!--
	description:

		"Traffic 3D front end documentation"

	copyright: ""
	license: ""
	date: "$Date:"
	revision: "$Revision:"
-->

<chapter xmlns="http://www.gobosoft.com/eiffel/gobo/documentation" id="sample/with_code">
<chapterinfo>
	<copyright>
		<year>2005</year>
		<holder>David Stefan, Valentin Wüstholz</holder>
	</copyright>
	<author>
		<firstname>David</firstname><surname>Stefan</surname>
	</author>
    <author>
		<firstname>Valentin</firstname><surname>Wüstholz</surname>
	</author>
	<!--<email>bay@inf.ethz.ch</email>-->
	<date>12. September 2005</date>
</chapterinfo>

<title>Miscellaneous</title>
<section id="page_index">
<title>Page Index</title>
<para>
<itemizedlist>
    <listitem><para>
    	<indexlink url="#dependencies">Dependencies</indexlink>
    </para></listitem>
    <listitem><para>
    	<indexlink url="#reuseability">Reuseability</indexlink>
    </para></listitem>
    <listitem><para>
    	<indexlink url="#future_perspective">Future perspective</indexlink>
    </para></listitem>
</itemizedlist>
</para>
</section>
<section id="dependencies">
	<title>Dependencies</title>
    <para>
        This section lists some things that are kind of ugly in the sense that the application may not work perfectly if some external parameters are changed.
    </para>
    <para>
    1) Map files:
        they must be both in the map subdirectory and in the main directory. This is a deficiency of the TRAFFIC map parser and should be fixed.
    </para>
    <para>
    2) in <classname>SHARED_CONSTANTS</classname>:
        <itemizedlist>
            <listitem><para>
                <featurename>Plane_size</featurename> is a constant that is chosen with our example maps in mind. This works for them 
		but it might not work perfectly for other map files. So this might have to be changed or somehow made independent of the map file.
            </para></listitem>
            <listitem><para>
                <featurename>map_to_gl_coords</featurename> is also optimized for our example maps. It use the range of the coordinates from 
		the map xml file and centers the Zurich main station on the screen. This might not be intended for other examples.
            </para></listitem>
        </itemizedlist>
        These issues could be solved by either extending the map file or using a separate xml file.
    </para>

<toplink/>
</section>

<section id="reuseability">
	<para/>
	<title>Reuseability</title>
	<para>
		This section discusses some scenarios of how one could reuse this work.
	</para>
    <para>
		 1) Minor changes like the representation of the traffic lines or buildings:
         <para>
            One could directly change the related classes; e.g. <classname>TRAFFIC_LINE_FACTORY</classname> or
	    <classname>BUILDING_FACTORY</classname>. This could for example be done by changing the OpenGL statements in 
	    <featurename>specify_object</featurename> and should have immediate consequences on their graphical representation.
         </para>
	</para>
	<para>
		 2) Keep the representation and add some new features like the ones on the toolbar:
         <para>
            One would have to add the new features in <classname>MAP</classname> in the section options and make them accessible by adding 
	    corresponding control options (e.g. widgets) to the GUI by changing <classname>CITY_3D_SCENE</classname>. Then one could add a boolean query to the feature <featurename>draw</featurename> like this is done with all the other options.
         </para>
	</para>
    <para>
		 3) Keep the MAP class and replace the GUI:
         <para>
            One could also replace the GUI with another one or just integrate the 'map part' (basically <classname>MAP</classname> and the factories) of the application into another application.
	    This could easily be done by creating an instance of <classname>MAP</classname> in the application. Then one could use the features from the option section like this is done in <classname>CITY_3D_SCENE</classname>
	    or even add new features to <classname>MAP</classname>.
         </para>
	</para>
<toplink/>
</section>

<section id="future_perspective">
	<para/>
	<title>Future perspective</title>
	<para>
		This section lists some things one could do in the future to inprove or enhance what we have done so far.
	</para>
	<para>
    1) new features:
        <itemizedlist>
            <listitem><para>
                First-person traveling: would make it possible to choose a origin and destination and travel through the city alongside the route. 
		This would be done by changing the viewpoint continuously according to the position in the city.
            </para></listitem>
            <listitem><para>
                Extra XML file: that would contain additional information like the position of special buildings, their textures, height, etc. 
		Moreover, things like the transformation that have to be done in <featurename>map_to_gl_coords</featurename> could be
		stored in this file.
            </para></listitem>
        </itemizedlist>
    </para>
    <para>
    2) extensions:
        <itemizedlist>
            <listitem><para>
                Text console or other GUI extensions like they're used in the already existing TRAFFIC applications. But as mentioned above, 
		abolishing <classname>CITY_3D_SCENE</classname> and taking the rest would probably be the more reasonable way.
            </para></listitem>
            <listitem><para>
                Time tables for the means of transport: This would comprise automatic updating or requesting from the internet.
            </para></listitem>
            <listitem><para>
                Integration of events like concerts, cinemas, theaters etc.
            </para></listitem>
        </itemizedlist>
    </para>
    <para>
    3) improvements:
        <itemizedlist>
            <listitem><para>
	Faster parsing of the XML file as this is one of the main bottlenecks of the project. If the parsing would go faster, more information 
	could be stored and used from the xml file. Otherwise, this project won't 'scale', because adding new features that would go
	with extending the xml file would make the whole application unreasonably slow.
            </para></listitem>
	    <listitem><para>
	An other way to bypass this would be to add multithreading, which isn't reliably supported by Eiffel until now. This would make it possible to 
	do the parsing in the background while the user could still interact with the program or parts are even been displayed already.
            </para></listitem>
            <listitem><para>
                more buildings etc. - would probably need an extra XML file
            </para></listitem>
        </itemizedlist>
    </para>
    <!--para>
    4) completely new things:
        
    </para-->
<toplink/>
</section>

</chapter>
